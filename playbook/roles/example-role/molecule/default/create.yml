---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ not (lookup('env', 'MOLECULE_DEBUG') | bool or molecule_yml.provisioner.log|default(false) | bool) }}"
  vars:
    ssh_user: molecule
    ssh_port: 22
    keypair_path: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/ssh_key"
  tasks:
    - name: Create keypair
      user:
        name: "{{ ssh_user }}"
        generate_ssh_key: true
        ssh_key_file: "{{ keypair_path }}"
      register: keypair

    - name: install_master | molecule | create.yml | Create NIC
      azure_rm_networkinterface:
        resource_group: "rg-fabrykpoc1-core-kcl-eastus-002"
        name: nic-molecule
        virtual_network: "vnet-rg-fabrykpoc1-core-kcl-eastus-002"
        subnet_name: "application"
        ip_configurations:
          - name: ipconfig-mol
            primary: true

    - name: Create molecule instance(s)
      azure_rm_virtualmachine:
        resource_group: "{{ item.resource_group_name }}"
        name: "{{ item.name }}"
        vm_size: "{{ item.vm_size }}"
        managed_disk_type: "Standard_LRS"
        admin_username: "{{ ssh_user }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: "/home/{{ ssh_user }}/.ssh/authorized_keys"
            key_data: "{{ keypair.ssh_public_key }}"
        image: "{{ item.image }}"
        network_interfaces: nic-molecule
      register: server
      with_items: "{{ molecule_yml.platforms }}"
      async: 7200
      poll: 0

    - name: Wait for instance(s) creation to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: azure_jobs
      until: azure_jobs.finished
      retries: 300
      with_items: "{{ server.results }}"


    - name: Affiche content of server variable
      debug:
        var: server
  
    - name: Display azure jobs result
      debug:
        var: azure_jobs

        # Mandatory configuration for Molecule to function.

    - name: Populate instance config dict
      set_fact:
        instance_conf_dict: {
          'instance': "{{ item.ansible_facts.azure_vm.name }}",
          'address': "{{ item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.privateIPAddress }}",
          'user': "{{ ssh_user }}",
          'port': "{{ ssh_port }}",
          'identity_file': "{{ keypair_path }}", }
      with_items: "{{ azure_jobs.results }}"
      register: instance_config_dict
      when: server.changed | bool

    - name: Convert instance config dict to a list
      set_fact:
        instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"
      when: server.changed | bool

    - name: Dump instance config
      copy:
        content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
        dest: "{{ molecule_instance_config }}"
      when: server.changed | bool

      #    - name: Wait for SSH
      #wait_for:
      #  port: "{{ ssh_port }}"
      #  host: "{{ item.address }}"
      #  search_regex: SSH
      #  delay: 10
      #with_items: "{{ lookup('file', molecule_instance_config) | molecule_from_yaml }}"
